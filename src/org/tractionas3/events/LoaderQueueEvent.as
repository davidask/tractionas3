/** * @version 1.0 * @author David Dahlstroem | daviddahlstroem.com *  *  * Copyright (c) 2009 David Dahlstroem | daviddahlstroem.com *  * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. * */package org.tractionas3.events{	import org.tractionas3.load.loaders.LoaderCore;	import flash.events.Event;	/**	 * LoaderQueueEvent provides a base event for loader queues.	 */	public class LoaderQueueEvent extends Event 	{			/**		 * Defines the value of the type property of a queueStart event object.		 */		public static const QUEUE_START:String = "queueStart";		/**		 * Defines the value of the type property of a queueStop event object.		 */		public static const QUEUE_STOP:String = "queueStop";		/**		 * Defines the value of the type property of a queueProgress event object.		 */		public static const QUEUE_PROGRESS:String = "queueProgress";		/**		 * Defines the value of the type property of a queueCompletes event object.		 */		public static const QUEUE_COMPLETE:String = "queueCompletes";		/**		 * Defines the value of the type property of a queueLoaderStart event object.		 */		public static const LOADER_START:String = "queueLoaderStart";		/**		 * Defines the value of the type property of a queueLoaderProgress event object.		 */		public static const LOADER_PROGRESS:String = "queueLoaderProgress";		/**		 * Defines the value of the type property of a queueLoaderComplete event object.		 */		public static const LOADER_COMPLETE:String = "queueLoaderComplete";		/**		 * Defines the value of the type property of a queueLoaderEnqueued event object.		 */		public static const LOADER_ENQUEUED:String = "queueLoaderEnqueued";		/**		 * Defines the value of the type property of a queueLoaderDequeued event object.		 */		public static const LOADER_DEQUEUED:String = "queueLoaderDequeued";		/**		 * Indicates the loader of which the LoaderQueueEvent is referencing.		 */		public var loader:LoaderCore;				/**		 * Creates a new LoaderQueueEvent object,		 */		public function LoaderQueueEvent(type:String, targetLoader:LoaderCore = null, bubbles:Boolean = false, cancelable:Boolean = false)		{			super(type, bubbles, cancelable);						loader = targetLoader;		}		override public function clone():Event		{			return new LoaderQueueEvent(type, loader, bubbles, cancelable);		}	}}