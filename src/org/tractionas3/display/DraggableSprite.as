/** * @version 2.0 * @author David Dahlstroem | daviddahlstroem.com *  *  * Copyright (c) 2010 David Dahlstroem | daviddahlstroem.com *  * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. * */package org.tractionas3.display {	import org.tractionas3.display.behaviors.DragAndDropBehavior;	import flash.geom.Rectangle;	/**	 * DraggableSprite directly implements drag and drop functionality and responds to mouse events similar to	 * <code>flash.display.Sprite.startDrag()</code> and <code>flash.display.Sprite.stopDrag()</code> methods.	 * <p />	 * Using <code>startDrag()</code> and <code>stopDrag()</code> methods on DragabbleSprite is not allowed and will throw an error. 	 */	public class DraggableSprite extends CoreSprite	{					/** @private */		protected var behavior:DragAndDropBehavior;				/**		 * Creates a new DraggableSprite object.		 */		public function DraggableSprite()		{			super();						behavior = new DragAndDropBehavior();						addBehavior(behavior);		}				public function get dragAndDropBehavior():DragAndDropBehavior		{			return behavior;		}				public function get dragging():Boolean		{			return behavior.isDraggingObject(this);		}		/**		 * @private		 */		override public function startDrag(lockCenter:Boolean = false, bounds:Rectangle = null):void		{			throw new Error("startDrag() method not allowed in DraggableSprite. Drag and drop functionality is automatically implemented.");		}		/**		 * @private		 */		override public function stopDrag():void		{			throw new Error("stopDrag() method not allowed in DraggableSprite. Drag and drop functionality is automatically implemented.");		}	}}