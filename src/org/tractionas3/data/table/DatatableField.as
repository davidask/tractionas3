/** * @version 1.0 * @author David Dahlstroem | daviddahlstroem.com *  *  * Copyright (c) 2009 David Dahlstroem | daviddahlstroem.com *  * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. * */package org.tractionas3.data.table {	import org.tractionas3.core.CoreObject;	import org.tractionas3.core.interfaces.ICoreInterface;	import org.tractionas3.reflection.stringify;	/**	 * DataTableField represents a field in a DataTable instance.	 * 	 * @see org.tractionas3.data.table.DataTable 	 */	public class DatatableField extends CoreObject implements ICoreInterface 	{		private var _name:String;		private var _type:Class;				/**		 * Creates a new DataTableField object.		 */		public function DatatableField(fieldName:String, fieldType:Class)		{			super();						_name = fieldName;						_type = fieldType;		}		/**		 * Returns the name of the data table field.		 */		public function get name():String		{			return _name;		}		/**		 * Returns the type of the data table field.		 */		public function get dataType():Class		{			return _type;		}		/**		 * @inheritDoc		 */		override public function destruct(deepDestruct:Boolean = false):void		{			_name = null;						_type = null;						super.destruct(deepDestruct);		}		/**		 * Returns a string representation of the data table field.		 */		override public function toString():String		{			return stringify(this);		}	}}