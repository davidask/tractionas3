/** * @version 1.0 * @author David Dahlstroem | daviddahlstroem.com *  *  * Copyright (c) 2009 David Dahlstroem | daviddahlstroem.com *  * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. * */package org.tractionas3.data.table {	import org.tractionas3.core.CoreObject;	import org.tractionas3.core.interfaces.ICoreInterface;	import org.tractionas3.data.table.IDatatable;	import org.tractionas3.reflection.stringify;	/**	 * DataTableRow represents a row in a DataTable instance.	 * 	 * @see org.tractionas3.data.table.DataTable	 */	public class DatatableRow extends CoreObject implements ICoreInterface 	{		private var _table:IDatatable;		private var _rowIndex:uint;		/**		 * Creates a new DatatableRow object.		 */		public function DatatableRow(table:IDatatable, index:uint)		{			super();						_table = table;						_rowIndex = index;		}		/**		 * Returns the values of the data table row.		 */		public function get values():Array		{			var a:Array = [];						for(var i:int = 0;i < _table.fieldCount;++i)			{				a.push(_table.getValue(i, _rowIndex));			}						return a;		}		/**		 * Returns the value of a specified field in the data table row.		 */		public function getFieldValue(fieldIdentifier:*):*		{			return _table.getValue(fieldIdentifier, _rowIndex);		}		/**		 * Indicates the index of the data table row.		 */		public function get rowIndex():uint		{			return _rowIndex;		}		/**		 * @inheritDoc		 */		override public function destruct(deepDestruct:Boolean = false):void		{			_table = null;						_rowIndex = 0;						super.destruct(deepDestruct);		}		/**		 * Returns a string representation of the data table row.		 */		override public function toString():String		{			return stringify(this) + "[" + values + "]";		}	}}