/** * @version 1.0 * @author David Dahlstroem | daviddahlstroem.com *  *  * Copyright (c) 2009 David Dahlstroem | daviddahlstroem.com *  * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. * */package org.tractionas3.data.convertion {	public class BitConverter 	{		/**		 * Converts bits to bytes		 */		public static function bitsToBytes(numBits:Number):Number 		{			return numBits / 8;		}		/**		 * Converts bits to kilobits		 */		public static function bitsToKilobits(numBits:Number):Number 		{			return numBits / 1024;		}		/**		 * Converts bits to megabits		 */		public static function bitsToMegabits(numBits:Number):Number 		{			return numBits / 1024 / 1024;		}		/**		 * Converts bits to kilobytes		 */		public static function bitsToKilobytes(numBits:Number):Number 		{			return numBits / 8192;		}		/**		 * Converts bytes to bits		 */		public static function bytesToBits(numBytes:Number):Number 		{			return numBytes * 8;		}		/**		 * Converts bytes to kilobits		 */		public static function bytesToKilobits(numBytes:Number):Number 		{			return numBytes / 128;		}		/**		 * Converts bytes to kilobytes		 */		public static function bytesToKilobytes(numBytes:Number):Number 		{			return numBytes / 1024;		}		/**		 * Converts bytes to megabytes		 */		public static function bytesToMegabytes(numBytes:Number):Number 		{			return numBytes / 1024 / 1024;		}		/**		 * Converts kilobits to bits		 */		public static function kilobitsToBits(numKilobits:Number):Number 		{			return numKilobits * 1024;		}		/**		 * Converts kilobits to bytes		 */		public static function kilobitsToBytes(numKilobits:Number):Number 		{			return numKilobits * 128;		}		/**		 * Converts kilobits to kilobytes		 */		public static function kilobitsToKilobytes(numKilobits:Number):Number 		{			return numKilobits / 8;		}		/**		 * Converts kilobytes to bits		 */		public static function kilobytesToBits(numKilobytes:Number):Number 		{			return numKilobytes * 8192;		}		/**		 * Converts kilobytes to bytes		 */		public static function kilobytesToBytes(numKilobytes:Number):Number 		{			return numKilobytes * 1024;		}		/**		 * Converts kilobytes to kilobits		 */		public static function kilobytesToKilobits(numKilobytes:Number):Number 		{			return numKilobytes * 8;		}		}}