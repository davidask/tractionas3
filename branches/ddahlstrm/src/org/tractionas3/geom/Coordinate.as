/** * @version 1.0 * @author David Dahlstroem | daviddahlstroem.com *  *  * Copyright (c) 2009 David Dahlstroem | daviddahlstroem.com *  * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. * */package org.tractionas3.geom {	import org.tractionas3.core.Destructor;	import org.tractionas3.core.interfaces.ICoreInterface;	import org.tractionas3.reflection.stringify;	import flash.geom.Point;	/**	 * Coordinate represents a coordinate in a two dimentional space.	 */	public class Coordinate extends Point implements ICoreInterface	{			/**		 * Creates a new Coordinate object.		 * 		 * @param x x coordinate.		 * @param y y coordinate.		 */		public function Coordinate(x:Number = 0, y:Number = 0)		{			super(x, y);		}		/**		 * @inheritDoc		 */		public function destruct(deepDestruct:Boolean = false):void		{			Destructor.destruct(this, deepDestruct);		}		/**		 * @inheritDoc		 */		override public function toString():String		{			return stringify(this);		}		/**		 * @inheritDoc		 */		public function listDestructableProperties():Array		{			return ["x", "y"];		}	}}