/** * @version 1.0 * @author David A *  *  * Copyright (c) 2009 David A *  * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. * */package org.tractionas3.data.collection {	import org.tractionas3.data.iterator.IIterable;	public interface ICollection extends IIterable 	{		/**		 * Clears the collection of all items.		 */		function clear():void;                		/**		 * Indicates the number of items in the collection.		 */		function get count():uint;		/**		 * Indicates whether the collection contains no items.		 */		function get isEmpty():Boolean;		/**		 * Adds an item to the collection,		 */		function addItem(value:*):*;		/**		 * Removes an item from the collection.		 */		function removeItem(value:*):void;		/**		 * Returns an item in the collection at specified index.		 */		function getItemAt(index:uint):*;		/**		 * Removes an item at specified index.		 */		function removeItemAt(index:uint):void;		/**		 * Returns the index of a specified item.		 */		function getItemIndex(value:*):uint;		/**		 * Specifies whether the collectioncontains the specified item.		 */		function hasItem(value:*):Boolean;	}}