/** * @version 1.0 * @author David A *  *  * Copyright (c) 2009 David A *  * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. * */package  {	import org.tractionas3.debug.Logger;	/**	 * Allows you to send debug messages to various outputs.	 * <p />	 * Using log instead of <code>trace()</code> you can, through the Logger class, specify what outputs you want manually.	 * Specifying log level allows you to differentiate log messages from each other.	 * <p />	 * You can find the available outputs in the <i>org.tractionas3.debug.output</i> package.	 * Use the <code>Logger.addOutput()</code> method to add an output to the Logger output list.	 * <p />	 * You may also create your own output. To do that, you need the output to implement <i>LoggerOutput</i> interface.	 * 	 * 	 * 	 * @param message Message	 * @param messageType Logger message type.	 * 	 * @see org.tractionas3.debug.Logger	 * @see org.tractionas3.debug.LogLevel	 * @see org.tractionas3.debug.output.LoggerOutput	 */	public function log(message:Object, messageType:uint = 0):void	{			Logger.relayLogMessage(message, messageType);			}}