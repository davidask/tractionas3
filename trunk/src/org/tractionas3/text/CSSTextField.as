package org.tractionas3.text {	import flash.text.StyleSheet;	import flash.text.TextField;	public class CSSTextField extends TextField 	{		/**		 * Specifies the default StyleSheet applied automatically to all CSSTextField objects on creation.		 */		public static var defaultStyleSheet:StyleSheet;		private var _rawText:String;		private var _styleClass:String;				/**		 * Creates a new CSSTextField object.		 * 		 * A CSSTextField is intended to work with StyleSheets for formatting text.		 * When using the <i>htmlText</i> property CSSTextField automatically wraps the text in a<i><body></i> element.		 * <p />		 * If a default StyleSheet is specified, this is applied to the CSSTextField on creation.		 * 		 * @param textFieldWidth The width of the textfield.		 * @param textFieldHeight The height of the textfield.		 */		public function CSSTextField(textFieldWidth:Number = 100, textFieldHeight:Number = 100)		{				if(defaultStyleSheet) styleSheet = defaultStyleSheet;						width = textFieldWidth;						height = textFieldHeight;						embedFonts = true;		}		/**		 * Specifies the text of the CSSTextField in html format.		 */		override public function get htmlText():String		{			return _rawText;		}		override public function set htmlText(value:String):void		{			_rawText = value;						if(styleClass) value = "<span class=\"" + styleClass + "\">" + value + "</span>";						super.htmlText = "<body>" + value + "</body>";		}		override public function set text(value:String):void		{			htmlText = value;		}		override public function get text():String		{			return _rawText;		}		/**		 * CSSTextField overrides the <i>styleSheet</i> method and reapplies the text to the textfield so that the text does not have to be reapplied manually.		 */		override public function get styleSheet():StyleSheet		{			return super.styleSheet;		}		override public function set styleSheet(value:StyleSheet):void		{			super.styleSheet = value;						htmlText = _rawText;		}		/**		 * Appends htmlText to the CSSTextField.		 */		public function appendHtmlText(newText:String):void		{			_rawText += newText;						htmlText = _rawText;		}		/**		 * Specifies a base style class of the CSSTextField.		 * When specified, the text is automatically wrapped in a <code><span class="specifiedClass">text</span></code> element.		 */		public function get styleClass():String		{			return _styleClass;		}		public function set styleClass(value:String):void		{			_styleClass = value;						htmlText = _rawText;		}	}}